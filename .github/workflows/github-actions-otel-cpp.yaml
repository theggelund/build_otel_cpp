name: Build opentelemetry cpp
on: [push]
jobs:
  windows_bazel:
    name: Bazel Windows
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        repository: 'open-telemetry/opentelemetry-cpp'

    - name: setup
      run: |
        ./ci/install_windows_bazelisk.ps1

    - name: Bazel build 
      run: ./ci/do_ci.ps1 bazel.build

  windows_cmake:
    name: cmake Windows 
    runs-on: windows-2019
    steps:
    - name: setup
      run: |
        ./ci/setup_windows_cmake.ps1
        ./ci/setup_windows_ci_environment.ps1

    - name: Cache Primes
      id: cache-build
      uses: actions/cache@v2
      with:
        path: build
        key: ${{ runner.os }}-build

    - name: cmake part one
      if: steps.cache-build.outputs.cache-hit != 'true'
      run: |
        $SRC_DIR=(Get-Item -Path ".\").FullName

        mkdir build
        mkdir plugin
        
        $BUILD_DIR="$SRC_DIR\build"
        $PLUGIN_DIR="$SRC_DIR\plugin"
        $VCPKG_DIR="$SRC_DIR\vcpkg"
                
        cd $BUILD_DIR

        cmake $SRC_DIR -DVCPKG_TARGET_TRIPLET=x64-windows -DCMAKE_BUILD_TYPE=Release "-DCMAKE_TOOLCHAIN_FILE=$VCPKG_DIR\scripts\buildsystems\vcpkg.cmake"
      shell: powershell

    - name: cmake part two
      run: |
        cd build 
        cmake --build . --target all

    - name: cmake part three
      run: |
        cd build 
        cmake --install . --config Release --prefix ${env.working-directory}/build/install

    - run: Compress-Archive -Path ${env.working-directory}/build -DestinationPath build.zip 
      shell: powershell

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: build.zip
        path: build.zip
        retention-days: 5
  # Build:
  #   runs-on: windows-latest
  #   steps:
  #     - run: git clone https://github.com/open-telemetry/opentelemetry-cpp.git
  #     - run: .\ci\setup_windows_ci_environment.ps1
  #       working-directory: opentelemetry-cpp
  #       shell: powershell
  #     - run: .\ci\setup_windows_cmake.ps1
  #       working-directory: opentelemetry-cpp
  #       shell: powershell
  #     - run: .\ci\install_windows_bazelisk.ps1
  #       working-directory: opentelemetry-cpp
  #       shell: powershell
  #     - run: .\ci\install_windows_protobuf.ps1
  #       working-directory: opentelemetry-cpp
  #       shell: powershell
  #     - run: .\ci\do_ci.ps1 bazel.build
  #       working-directory: opentelemetry-cpp
  #       shell: powershell